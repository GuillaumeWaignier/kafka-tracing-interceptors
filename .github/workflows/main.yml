# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
         fetch-depth: 0

    # Import GPG Key
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v2
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    # Java
    - name: Set up JDK 11
      uses: actions/setup-java@v3.4.1
      with:
         java-version: 11
         server-id: ossrh
         server-username: MAVEN_USERNAME
         server-password: MAVEN_PASSWORD
    
    # Build Maven
    - name: Build with Maven
      run: mvn -B package verify sonar:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }} --file pom.xml
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     
    # Publish to maven central
    - name: Publish package
      if: startsWith(github.ref, 'refs/tags/')
      run: mvn -B deploy
      env:
         MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
         MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

    # Compute archive file name
    - name: Compute archive file name
      id: fileName
      run: echo "::set-output name=archiveFileName::`ls target/*-jar-with-dependencies.jar | cut -d'/' -f2`"    
    
    # Compute version
    - name: Compute version of release
      id: versionName
      run: echo "::set-output name=versionName::`echo ${{ steps.fileName.outputs.archiveFileName }} | cut -d'-' -f4`"
    
    # Create GitHub release
    - name: Create Release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         tag_name: ${{ github.ref }}
         release_name: v${{ steps.versionName.outputs.versionName }}
         draft: true
         prerelease: true
       
    # Upload Archive
    - name: Upload Release Archive
      id: upload-release-asset
      if: startsWith(github.ref, 'refs/tags/') 
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: target/${{ steps.fileName.outputs.archiveFileName }}
         asset_name: ${{ steps.fileName.outputs.archiveFileName }}
         asset_content_type: application/java-archive
